{"version":3,"sources":["components/ResumePreview.js","components/phoneInput.js","components/Profile.js","components/Bio.js","components/Education.js","components/Experience.js","components/FormEntry.js","App.js","index.js"],"names":["ResumePreview","props","className","id","onClick","editResume","FirstName","LastName","Email","PhoneNumber","Bio","Educations","map","item","i","schoolName","deleteEducation","major","graduationDate","gpa","name","Experiences","employer","deleteExperience","title","startDate","endDate","uniqid","MaskedPhoneNumber","useState","setValue","mask","maskChar","value","savedPhoneNumber","onChange","e","target","maskPlaceHolder","placeholder","Profile","firstNameSatisfied","setFirstNameSatisfied","lastNameSatisfied","setLastNameSatisfied","emailError","setEmailError","length","savedFirstName","outline","type","savedLastName","savedEmail","onBlur","includes","savedBio","isThisEmpty","field","trim","Education","schoolNameError","setSchoolNameError","majorError","setMajorError","graduationDateError","setGraduationDateError","gpaError","setGpaError","submissionError","setSubmissionError","validateField","onSubmit","preventDefault","submitEducation","autoComplete","onClear","Experience","experienceError","setExperienceError","submitExperience","FormEntry","previewResume","handleProfileChange","profileError","handleBioChange","handleEducationChange","onSubmitEducation","educationError","handleExperienceChange","onSubmitExperience","App","experiences","setExperiences","educations","setEducations","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNumber","setPhoneNumber","bio","setBio","setEmployer","setTitle","setStartDate","setEndDate","setSchoolName","setMajor","setGraduationDate","setGpa","preview","setPreview","handleChange","bundledEducation","push","bundledExperience","concat","deleteItem","itemType","tempEducations","splice","tempExperiences","toggle","onPhoneChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72a415e2.chunk.js","sourcesContent":["import React from \"react\";\nimport uniqid from \"uniqid\";\n\nconst ResumePreview = (props) => {\n  return (\n    <div className=\"MainBody\">\n      <div className=\"AppHeader\">\n        <h1 className=\"AppHeader\"> Resume Preview</h1>\n        <button\n          id=\"PreviewButton\"\n          className=\"PreviewButton\"\n          onClick={props.editResume}\n        >\n          Edit\n        </button>\n      </div>\n      <div className=\"SubBody\">\n        <div className=\"MainContainer\">\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName\">{props.FirstName}&nbsp;</h2>\n            <h2 className=\"FirstLastName\">{props.LastName}</h2>\n          </div>\n          <div className=\"ContentContainer\">\n            <h3 className=\"FirstLastName\">{props.Email}&nbsp;</h3>\n            <h3> | </h3>\n            <h3 className=\"FirstLastName\">&nbsp; {props.PhoneNumber} </h3>\n          </div>\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName\">Bio</h2>\n          </div>\n          <div className=\"ContentContainer\">\n            <span className=\"BioText\">{props.Bio}</span>\n          </div>\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName\">Education</h2>\n          </div>\n          <>\n            {props.Educations.map((item, i) => {\n              return (\n                <div className=\"EducationContainer\" key={item.name + item.gpa}>\n                  <div className=\"DeleteRow\">\n                    <span className=\"EducationDetail\">{item.schoolName}</span>\n                    <i\n                      className=\"fas fa-trash BlueTrashCan\"\n                      onClick={() => props.deleteEducation(\"Education\", i)}\n                    ></i>\n                  </div>\n                  <span className=\"EducationDetail\">{item.major}</span>\n                  <span className=\"EducationDetail\">{item.graduationDate}</span>\n                  <span className=\"EducationDetail\">GPA: {item.gpa}</span>\n                </div>\n              );\n            })}\n          </>\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName Experience\">Experience</h2>\n          </div>\n          <>\n            {props.Experiences.map((item, i) => {\n              return (\n                <div className=\"EducationContainer\" key={uniqid()}>\n                  <div className=\"DeleteRow\">\n                    <span className=\"EducationDetail\">{item.employer}</span>\n                    <i\n                      id=\"DeleteEducation\"\n                      className=\"fas fa-trash BlueTrashCan\"\n                      onClick={() => props.deleteExperience(\"Experience\", i)}\n                    ></i>\n                  </div>\n                  <span className=\"EducationDetail\">{item.title}</span>\n                  <span className=\"EducationDetail\">\n                    Start Date: {item.startDate}\n                  </span>\n                  <span className=\"EducationDetail\">\n                    End Date: {item.endDate}\n                  </span>\n                </div>\n              );\n            })}\n          </>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResumePreview;\n","import React from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { useState } from \"react\";\n\nconst MaskedPhoneNumber = (props) => {\n  const [value, setValue] = useState(\"\");\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setValue(value);\n    props.onChange(e)\n  };\n\n  return (\n    <InputMask\n      mask='(999) 999-9999'\n      maskChar={null}\n      value={props.savedPhoneNumber}\n      onChange={onChange}\n      maskPlaceHolder=\"Phone Number\"\n      placeholder=\"Phone Number\"\n      name=\"PhoneNumber\"\n    />\n  );\n};\n\nexport default MaskedPhoneNumber;\n","import React from \"react\";\nimport MaskedPhoneNumber from \"./phoneInput\";\nimport { useState, useEffect } from \"react\";\n\nconst Profile = (props) => {\n  const [firstNameSatisfied, setFirstNameSatisfied] = useState(true);\n  const [lastNameSatisfied, setLastNameSatisfied] = useState(true);\n  const [emailError, setEmailError] = useState(\"\");\n\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    props.onChange(e);\n    if (name === \"FirstName\") {\n      if (value.length > 2) {\n        setFirstNameSatisfied(true);\n      } else if (value.length < 2) setFirstNameSatisfied(false);\n    } else if (name === \"LastName\") {\n      if (value.length > 2) {\n        setLastNameSatisfied(true);\n      } else if (value.length < 2) {\n        setLastNameSatisfied(false);\n      }\n    }\n  };\n\n  const validateEmail = (e) => {\n    const { value } = e.target;\n    if (!value.includes('@') || !value.includes(\".\")) {\n      setEmailError(\"Must be a valid email\");\n    } else {\n      setEmailError(\"\");\n    }\n  };\n\n  return (\n    <form id=\"Profile\">\n      <div className=\"FormHeader\">\n        <p>Profile</p>\n      </div>\n      <div className=\"FormSection\">\n        <input\n          name=\"FirstName\"\n          placeholder=\"First Name\"\n          onChange={onChange}\n          value={props.savedFirstName}\n          className={firstNameSatisfied ? \"Profile\" : \"Bad-Profile\"}\n          outline=\"none\"\n          type=\"text\"\n        />\n        <input\n          name=\"LastName\"\n          placeholder=\"Last Name\"\n          value={props.savedLastName}\n          onChange={onChange}\n          className={lastNameSatisfied ? \"Profile\" : \"Bad-Profile\"}\n          type=\"text\"\n        />\n\n        <input\n          name=\"Email\"\n          placeholder=\"Email\"\n          onChange={props.onChange}\n          value={props.savedEmail}\n          className=\"Email\"\n          type=\"text\"\n          onBlur={validateEmail}\n        />\n        <span className=\"ErrorCode\">{emailError}</span>\n\n        <MaskedPhoneNumber\n          onChange={props.onChange}\n          savedPhoneNumber={props.savedPhoneNumber}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\nconst Bio = (props) => {\n  return (\n    <>\n      <div className=\"FormHeader\">\n        <p>Bio</p>\n      </div>\n      <div className=\"FormSection\">\n        <textarea\n          className=\"Bio\"\n          name=\"Bio\"\n          id=\"Bio\"\n          placeholder=\"Max Word Count: 250 \"\n          onChange={props.onChange}\n          value={props.savedBio}\n          type=\"text\"\n        />\n        <p className=\"WordCountError\"></p>\n      </div>\n    </>\n  );\n};\n\nexport default Bio;\n","import React from \"react\";\nimport { useState } from \"react\";\n\nconst isThisEmpty = (field) => {\n  if (field.trim().length === 0) {\n    return true;\n  }\n};\n\nconst Education = (props) => {\n  const [schoolNameError, setSchoolNameError] = useState(\"\");\n  const [majorError, setMajorError] = useState(\"\");\n  const [graduationDateError, setGraduationDateError] = useState(\"\");\n  const [gpaError, setGpaError] = useState(\"\");\n  const [submissionError, setSubmissionError] = useState(\"\");\n\n  const validateField = (e) => {\n    const { value, name } = e.target;\n\n    if (isThisEmpty(value)) {\n      if (name === \"schoolName\") {\n        setSchoolNameError(\"Empty School Name\");\n      } else if (name === \"major\") {\n        setMajorError(\"Empty Major\");\n      } else if (name === \"graduationDate\") {\n        setGraduationDateError(\"Empty Date\");\n      } else if (name === \"gpa\") {\n        setGpaError(\"Empty GPA\");\n      }\n    } else if (!isThisEmpty(value)) {\n      if (name === \"schoolName\") {\n        setSchoolNameError(\"\");\n      } else if (name === \"major\") {\n        setMajorError(\"\");\n      } else if (name === \"graduationDate\") {\n        setGraduationDateError(\"\");\n      } else if (name === \"gpa\") {\n        setGpaError(\"\");\n      }\n    }\n  };\n\n  const submitIfValidated = (e) => {\n    e.preventDefault();\n    if (\n      props.schoolName !== \"\" &&\n      props.major !== \"\" &&\n      props.graduationDate !== \"\" &&\n      props.gpa !== \"\"\n    ) {\n      props.submitEducation(e);\n      setSubmissionError(\"\");\n    } else setSubmissionError(\"Can't Not Submit With Blank Fields\");\n  };\n\n  const clearErrors = (e) => {\n    props.onClear(e);\n    setGpaError(\"\");\n    setSchoolNameError(\"\");\n    setMajorError(\"\");\n    setGraduationDateError(\"\");\n    setSubmissionError(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"FormHeader\">\n        <p>Education</p>\n      </div>\n      <form\n        className=\"FormSection\"\n        id=\"EducationForm\"\n        onSubmit={submitIfValidated}\n      >\n        <input\n          name=\"schoolName\"\n          placeholder=\"School Name\"\n          onChange={props.onChange}\n          value={props.schoolName}\n          className=\"Education\"\n          onBlur={validateField}\n          autoComplete=\"off\"\n        ></input>\n        <span className='ErrorCode'>{schoolNameError}</span>\n        <input\n          name=\"major\"\n          placeholder=\"Major\"\n          onChange={props.onChange}\n          value={props.major}\n          type=\"text\"\n          className=\"Education\"\n          onBlur={validateField}\n          autoComplete=\"off\"\n        ></input>\n        <span className=\"ErrorCode\">{majorError}</span>\n        <input\n          name=\"graduationDate\"\n          placeholder=\"Graduation Date\"\n          onChange={props.onChange}\n          value={props.graduationDate}\n          type=\"text\"\n          className=\"Education\"\n          onBlur={validateField}\n          autoComplete=\"off\"\n        ></input>\n        <span className=\"ErrorCode\">{graduationDateError}</span>\n        <input\n          name=\"gpa\"\n          placeholder=\"GPA\"\n          onChange={props.onChange}\n          value={props.gpa}\n          type=\"text\"\n          className=\"Education\"\n          onBlur={validateField}\n          autoComplete=\"off\"\n        ></input>\n        <span className=\"ErrorCode\">{gpaError}</span>\n\n        <div className=\"ButtonContainer\">\n          <button id=\"EducationSubmit\" className=\"SectionSubmit\" type=\"submit\">\n            Submit\n          </button>\n          <button\n            id=\"resetEducation\"\n            className=\"ClearFormButton\"\n            type=\"reset\"\n            onClick={clearErrors}\n          >\n            Clear\n          </button>\n        </div>\n        <span className=\"ErrorCode\">{submissionError}</span>\n      </form>\n    </>\n  );\n};\n\nexport default Education;\n","import React from \"react\";\nimport { useState } from \"react\";\n// import \"./styles/EntryPage.css\";\n\nconst Experience = (props) => {\n  const [experienceError, setExperienceError] = useState(\"\");\n\n  const validateExperience = (e) => {\n    e.preventDefault();\n\n    if (\n      props.employer === \"\" &&\n      props.title === \"\" &&\n      props.startDate === \"\" &&\n      props.endDate === \"\"\n    ) {\n      setExperienceError(\"All Fields Must Have Values\");\n    } else if (\n      props.employer.length === \"\" ||\n      props.employer.trim().length === 0\n    ) {\n      setExperienceError(\"Employer Can't Be Blank\");\n    } else if (props.title === \"\" || props.title.trim().length === 0) {\n      setExperienceError(\"Title Can't Be Blank\");\n    } else if (props.startDate === \"\" || props.startDate.trim().length === 0) {\n      setExperienceError(\"Start Date Can't Be Blank\");\n    } else if (props.endDate === \"\" || props.endDate.trim().length === 0) {\n      setExperienceError(\"End Date Can't Be Blank\");\n    } else {\n      props.submitExperience(e);\n      setExperienceError(\"\");\n    }\n  };\n\n  const clearError = () => {\n    setExperienceError(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"FormHeader\">\n        <p>Experience</p>\n      </div>\n      <form\n        className=\"FormSection\"\n        id=\"ExperienceForm\"\n        onSubmit={validateExperience}\n      >\n        <input\n          name=\"employer\"\n          placeholder=\"Employer\"\n          onChange={props.onChange}\n          value={props.employer}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <input\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={props.onChange}\n          value={props.title}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <input\n          name=\"startDate\"\n          placeholder=\"Start Date\"\n          onChange={props.onChange}\n          value={props.startDate}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <input\n          name=\"endDate\"\n          placeholder=\"End Date (if still employed, enter Current)\"\n          onChange={props.onChange}\n          value={props.endDate}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <div className=\"ButtonContainer\">\n          <button id=\"ExperienceSubmit\" className=\"SectionSubmit\" type=\"submit\">\n            Submit\n          </button>\n          <button\n            id=\"resetExperience\"\n            className=\"ClearFormButton\"\n            type=\"reset\"\n            onClick={(props.onClear, clearError)}\n          >\n            Clear\n          </button>\n        </div>\n        <span className=\"ErrorCode\">{experienceError}</span>\n      </form>\n    </>\n  );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport Bio from \"./Bio\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\n\nconst FormEntry = (props) => {\n  return (\n    <div className=\"MainBody\">\n      <div className=\"AppHeader\">\n        <h1 className=\"AppHeader\"> Resume Builder</h1>\n        <button\n          id=\"PreviewButton\"\n          className=\"PreviewButton\"\n          onClick={props.previewResume}\n        >\n          Preview\n        </button>\n      </div>\n      <div className='SubBody'>\n        <Profile\n          onChange={props.handleProfileChange}\n          savedFirstName={props.savedFirstName}\n          savedLastName={props.savedLastName}\n          savedEmail={props.savedEmail}\n          savedPhoneNumber={props.savedPhoneNumber}\n          profileError={props.profileError}\n\n        />\n        <Bio onChange={props.handleBioChange} savedBio={props.savedBio} />\n        <Education\n          onChange={props.handleEducationChange}\n          submitEducation={props.onSubmitEducation}\n          educationError={props.educationError}\n          onClear={props.onClear}\n          schoolName={props.schoolName}\n          major={props.major}\n          graduationDate={props.graduationDate}\n          gpa={props.gpa}\n        />\n        <Experience\n          onChange={props.handleExperienceChange}\n          submitExperience={props.onSubmitExperience}\n          experienceError={props.experienceError}\n          onClear={props.onClear}\n          employer={props.employer}\n          title={props.title}\n          startDate={props.startDate}\n          endDate={props.endDate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormEntry;\n","import React from \"react\";\nimport ResumePreview from \"./components/ResumePreview\";\nimport FormEntry from \"./components/FormEntry\";\nimport { useState } from \"react\";\n\nconst App = (props) => {\n  const [experiences, setExperiences] = useState([]);\n  const [educations, setEducations] = useState([]);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [schoolName, setSchoolName] = useState(\"\");\n  const [major, setMajor] = useState(\"\");\n  const [graduationDate, setGraduationDate] = useState(\"\");\n  const [gpa, setGpa] = useState(\"\");\n  const [preview, setPreview] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"FirstName\") {\n      setFirstName(value);\n    } else if (name === \"LastName\") {\n      setLastName(value);\n    } else if (name === \"Email\") {\n      setEmail(value);\n    } else if (name === \"PhoneNumber\") {\n      setPhoneNumber(value);\n    } else if (name === \"Bio\") {\n      setBio(value);\n    } else if (name === \"schoolName\") {\n      setSchoolName(value);\n    } else if (name === \"major\") {\n      setMajor(value);\n    } else if (name === \"graduationDate\") {\n      setGraduationDate(value);\n    } else if (name === \"gpa\") {\n      setGpa(value);\n    } else if (name === \"schoolName\") {\n      setSchoolName(value);\n    } else if (name === \"employer\") {\n      setEmployer(value);\n    } else if (name === \"title\") {\n      setTitle(value);\n    } else if (name === \"startDate\") {\n      setStartDate(value);\n    } else if (name === \"endDate\") {\n      setEndDate(value);\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { id } = e.target;\n\n    if (id === \"EducationForm\") {\n      const bundledEducation = {\n        schoolName,\n        major,\n        graduationDate,\n        gpa,\n      };\n      educations.push(bundledEducation);\n      setEducations(educations);\n      setSchoolName(\"\");\n      setMajor(\"\");\n      setGraduationDate(\"\");\n      setGpa(\"\");\n    } else if (id === \"ExperienceForm\") {\n      const bundledExperience = {\n        employer,\n        title,\n        startDate,\n        endDate,\n      };\n      setExperiences(experiences.concat(bundledExperience));\n      setEmployer(\"\");\n      setTitle(\"\");\n      setStartDate(\"\");\n      setEndDate(\"\");\n    }\n  };\n\n  const deleteItem = (itemType, i) => {\n    if (itemType === \"Education\") {\n      const tempEducations = [...educations];\n      tempEducations.splice(i, 1);\n      setEducations(tempEducations);\n    } else {\n      const tempExperiences = [...experiences];\n      tempExperiences.splice(i, 1);\n      setExperiences(tempExperiences);\n    }\n  };\n\n  const toggle = () => {\n    setPreview(preview === false ? true : false);\n  };\n\n  const onClear = (e) => {\n    const { id } = e.target;\n    if (id === \"resetEducation\") {\n      setSchoolName(\"\");\n      setMajor(\"\");\n      setGraduationDate(\"\");\n      setGpa(\"\");\n    } else setEmployer(\"\");\n    setTitle(\"\");\n    setStartDate(\"\");\n    setEndDate(\"\");\n  };\n\n  if (preview) {\n    return (\n      <ResumePreview\n        FirstName={firstName}\n        LastName={lastName}\n        Email={email}\n        PhoneNumber={phoneNumber}\n        Bio={bio}\n        Educations={educations}\n        deleteEducation={deleteItem}\n        Experiences={experiences}\n        deleteExperience={deleteItem}\n        editResume={toggle}\n      />\n    );\n  } else {\n    return (\n      <FormEntry\n        handleProfileChange={handleChange}\n        onChange={handleChange}\n        handleBioChange={handleChange}\n        handleEducationChange={handleChange}\n        handleExperienceChange={handleChange}\n        onSubmitEducation={onSubmit}\n        onSubmitExperience={onSubmit}\n        previewResume={toggle}\n        savedFirstName={firstName}\n        savedLastName={lastName}\n        savedEmail={email}\n        savedPhoneNumber={phoneNumber}\n        savedBio={bio}\n        onClear={onClear}\n        schoolName={schoolName}\n        major={major}\n        graduationDate={graduationDate}\n        gpa={gpa}\n        employer={employer}\n        title={title}\n        startDate={startDate}\n        endDate={endDate}\n        onPhoneChange={handleChange}\n      />\n    );\n  }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}