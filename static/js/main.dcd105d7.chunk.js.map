{"version":3,"sources":["components/ResumePreview.js","components/Profile.js","components/Bio.js","components/Education.js","components/Experience.js","components/FormEntry.js","App.js","index.js"],"names":["ResumePreview","props","className","id","onClick","editResume","FirstName","LastName","Email","PhoneNumber","Bio","Educations","map","item","i","schoolName","deleteEducation","major","graduationDate","gpa","name","Experiences","employer","deleteExperience","title","startDate","endDate","uniqid","Profile","placeholder","onChange","value","savedFirstName","type","savedLastName","savedEmail","savedPhoneNumber","profileError","savedBio","Education","onSubmit","submitEducation","SchoolName","Major","GraduationDate","GPA","EducationError","onClear","educationError","Experience","submitExperience","Employer","autoComplete","Title","StartDate","EndDate","experienceError","FormEntry","previewResume","handleProfileChange","handleBioChange","handleEducationChange","onSubmitEducation","handleExperienceChange","onSubmitExperience","App","useState","experiences","setExperiences","educations","setEducations","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNumber","setPhoneNumber","bio","setBio","setEmployer","setTitle","setStartDate","setEndDate","setSchoolName","setMajor","setGraduationDate","setGpa","setExperienceError","setEducationError","preview","setPreview","handleChange","e","target","preventDefault","bundledEducation","push","bundledExperience","concat","deleteItem","itemType","tempEducations","splice","tempExperiences","toggle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAsFeA,EAnFO,SAACC,GACrB,OACE,sBAAKC,UAAU,WAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,6BACA,wBACEC,GAAG,gBACHD,UAAU,gBACVE,QAASH,EAAMI,WAHjB,qBAQF,qBAAKH,UAAU,UAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAIA,UAAU,gBAAd,UAA+BD,EAAMK,UAArC,UACA,oBAAIJ,UAAU,gBAAd,SAA+BD,EAAMM,cAEvC,sBAAKL,UAAU,mBAAf,UACE,qBAAIA,UAAU,gBAAd,UAA+BD,EAAMO,MAArC,UACA,qCACA,qBAAIN,UAAU,gBAAd,kBAAsCD,EAAMQ,YAA5C,UAEF,qBAAKP,UAAU,mBAAf,SACE,oBAAIA,UAAU,gBAAd,mBAEF,qBAAKA,UAAU,mBAAf,SACE,sBAAMA,UAAU,UAAhB,SAA2BD,EAAMS,QAEnC,qBAAKR,UAAU,mBAAf,SACE,oBAAIA,UAAU,gBAAd,yBAEF,mCACGD,EAAMU,WAAWC,KAAI,SAACC,EAAMC,GAC3B,OACE,sBAAKZ,UAAU,qBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAMA,UAAU,kBAAhB,SAAmCW,EAAKE,aACxC,mBACEb,UAAU,4BACVE,QAAS,kBAAMH,EAAMe,gBAAgB,YAAaF,SAGtD,sBAAMZ,UAAU,kBAAhB,SAAmCW,EAAKI,QACxC,sBAAMf,UAAU,kBAAhB,SAAmCW,EAAKK,iBACxC,uBAAMhB,UAAU,kBAAhB,kBAAwCW,EAAKM,SAVNN,EAAKO,KAAKP,EAAKM,UAe9D,qBAAKjB,UAAU,mBAAf,SACE,oBAAIA,UAAU,2BAAd,0BAEF,mCACGD,EAAMoB,YAAYT,KAAI,SAACC,EAAMC,GAC5B,OACE,sBAAKZ,UAAU,qBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAMA,UAAU,kBAAhB,SAAmCW,EAAKS,WACxC,mBACEnB,GAAG,kBACHD,UAAU,4BACVE,QAAS,kBAAMH,EAAMsB,iBAAiB,aAAcT,SAGxD,sBAAMZ,UAAU,kBAAhB,SAAmCW,EAAKW,QACxC,uBAAMtB,UAAU,kBAAhB,yBACeW,EAAKY,aAEpB,uBAAMvB,UAAU,kBAAhB,uBACaW,EAAKa,aAdqBC,qBCZ1CC,EA7CC,SAAC3B,GACf,OACE,uBAAME,GAAG,UAAT,UACE,qBAAKD,UAAU,aAAf,SACE,0CAEF,sBAAKA,UAAU,cAAf,UACE,uBACEkB,KAAK,YACLS,YAAY,aACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAM+B,eACb9B,UAAU,UACV+B,KAAK,SAEP,uBACEb,KAAK,WACLS,YAAY,YACZE,MAAO9B,EAAMiC,cACbJ,SAAU7B,EAAM6B,SAChB5B,UAAU,UACV+B,KAAK,SAEP,uBACEb,KAAK,QACLS,YAAY,QACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAMkC,WACbjC,UAAU,UACV+B,KAAK,SAEP,uBACEb,KAAK,cACLS,YAAY,eACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAMmC,iBACblC,UAAU,UACV+B,KAAK,SAENhC,EAAMoC,oBCjBA3B,EAtBH,SAACT,GACX,OACE,qCACE,qBAAKC,UAAU,aAAf,SACE,sCAEF,sBAAKA,UAAU,cAAf,UACE,0BACEA,UAAU,MACVkB,KAAK,MACLjB,GAAG,MACH0B,YAAY,uBACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAMqC,SACbL,KAAK,SAEP,mBAAG/B,UAAU,0BCyCNqC,EAzDG,SAACtC,GACjB,OACE,qCACE,qBAAKC,UAAU,aAAf,SACE,4CAEF,uBACEA,UAAU,cACVC,GAAG,gBACHqC,SAAUvC,EAAMwC,gBAHlB,UAKE,uBACErB,KAAK,aACLS,YAAY,cACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAMyC,WACbxC,UAAU,cAEZ,uBACEkB,KAAK,QACLS,YAAY,QACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAM0C,MACbV,KAAK,OACL/B,UAAU,cAEZ,uBACEkB,KAAK,iBACLS,YAAY,kBACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAM2C,eACbX,KAAK,OACL/B,UAAU,cAEZ,uBACEkB,KAAK,MACLS,YAAY,MACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAM4C,IACbZ,KAAK,OACL/B,UAAU,cAEXD,EAAM6C,eACP,sBAAK5C,UAAU,kBAAf,UACE,wBAAQC,GAAG,kBAAkBD,UAAU,gBAAgB+B,KAAK,SAA5D,oBAGA,wBAAQ9B,GAAG,iBAAiBD,UAAU,kBAAkB+B,KAAK,QAAQ7B,QAASH,EAAM8C,QAApF,sBAIF,sBAAM7C,UAAU,YAAhB,SAA6BD,EAAM+C,wBCU5BC,EA7DI,SAAChD,GAClB,OACE,qCACE,qBAAKC,UAAU,aAAf,SACE,6CAEF,uBACEA,UAAU,cACVC,GAAG,iBACHqC,SAAUvC,EAAMiD,iBAHlB,UAKE,uBACE9B,KAAK,WACLS,YAAY,WACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAMkD,SACbC,aAAa,MACbnB,KAAK,OACL/B,UAAU,eAEZ,uBACEkB,KAAK,QACLS,YAAY,QACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAMoD,MACbD,aAAa,MACbnB,KAAK,OACL/B,UAAU,eAEZ,uBACEkB,KAAK,YACLS,YAAY,aACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAMqD,UACbF,aAAa,MACbnB,KAAK,OACL/B,UAAU,eAEZ,uBACEkB,KAAK,UACLS,YAAY,8CACZC,SAAU7B,EAAM6B,SAChBC,MAAO9B,EAAMsD,QACbH,aAAa,MACbnB,KAAK,OACL/B,UAAU,eAEZ,sBAAKA,UAAU,kBAAf,UACE,wBAAQC,GAAG,mBAAmBD,UAAU,gBAAgB+B,KAAK,SAA7D,oBAGA,wBAAQ9B,GAAG,kBAAkBD,UAAU,kBAAkB+B,KAAK,QAAQ7B,QAASH,EAAM8C,QAArF,sBAIF,sBAAM7C,UAAU,YAAhB,SAA6BD,EAAMuD,yBCZ5BC,EAxCG,SAACxD,GACjB,OACE,sBAAKC,UAAU,WAAf,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,6BACA,wBACEC,GAAG,gBACHD,UAAU,gBACVE,QAASH,EAAMyD,cAHjB,wBAQF,sBAAKxD,UAAU,UAAf,UACE,cAAC,EAAD,CACE4B,SAAU7B,EAAM0D,oBAChB3B,eAAgB/B,EAAM+B,eACtBE,cAAejC,EAAMiC,cACrBC,WAAYlC,EAAMkC,WAClBC,iBAAkBnC,EAAMmC,iBACxBC,aAAcpC,EAAMoC,eAEtB,cAAC,EAAD,CAAKP,SAAU7B,EAAM2D,gBAAiBtB,SAAUrC,EAAMqC,WACtD,cAAC,EAAD,CACER,SAAU7B,EAAM4D,sBAChBpB,gBAAiBxC,EAAM6D,kBACvBd,eAAgB/C,EAAM+C,eACtBD,QAAW9C,EAAM8C,UAEnB,cAAC,EAAD,CACEjB,SAAU7B,EAAM8D,uBAChBb,iBAAkBjD,EAAM+D,mBACxBR,gBAAiBvD,EAAMuD,gBACvBT,QAAW9C,EAAM8C,iBC0IZkB,G,MA3KH,SAAChE,GAAW,IAAD,EACiBiE,mBAAS,IAD1B,mBACdC,EADc,KACDC,EADC,OAEeF,mBAAS,IAFxB,mBAEdG,EAFc,KAEFC,EAFE,OAGaJ,mBAAS,IAHtB,mBAGdK,EAHc,KAGHC,EAHG,OAIWN,mBAAS,IAJpB,mBAIdO,EAJc,KAIJC,EAJI,OAKKR,mBAAS,IALd,mBAKdS,EALc,KAKPC,EALO,OAMiBV,mBAAS,IAN1B,mBAMdW,EANc,KAMDC,EANC,OAOCZ,mBAAS,IAPV,mBAOda,EAPc,KAOTC,EAPS,OAQWd,mBAAS,IARpB,mBAQd5C,EARc,KAQJ2D,EARI,OASKf,mBAAS,IATd,mBASd1C,EATc,KASP0D,EATO,OAUahB,mBAAS,IAVtB,mBAUdzC,EAVc,KAUH0D,EAVG,OAWSjB,mBAAS,IAXlB,mBAWdxC,EAXc,KAWL0D,EAXK,OAYelB,mBAAS,IAZxB,mBAYdnD,EAZc,KAYFsE,GAZE,QAaKnB,mBAAS,IAbd,qBAadjD,GAbc,MAaPqE,GAbO,SAcuBpB,mBAAS,IAdhC,qBAcdhD,GAdc,MAcEqE,GAdF,SAeCrB,mBAAS,IAfV,qBAed/C,GAfc,MAeTqE,GAfS,SAgByBtB,mBAAS,IAhBlC,qBAgBdV,GAhBc,MAgBGiC,GAhBH,SAiBwBvB,mBAAS,IAjBjC,qBAiBdlB,GAjBc,MAiBE0C,GAjBF,SAkBSxB,oBAAS,GAlBlB,qBAkBdyB,GAlBc,MAkBLC,GAlBK,MAoBfC,GAAe,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlB3E,EADkB,EAClBA,KAAMW,EADY,EACZA,MAED,cAATX,EACFoD,EAAazC,GACK,aAATX,EACTsD,EAAY3C,GACM,UAATX,EACTwD,EAAS7C,GACS,gBAATX,EACT0D,EAAe/C,GACG,QAATX,EACT4D,EAAOjD,GACW,eAATX,EACTiE,GAActD,GACI,UAATX,EACTkE,GAASvD,GACS,mBAATX,EACTmE,GAAkBxD,GACA,QAATX,EACToE,GAAOzD,GACW,eAATX,EACTiE,GAActD,GACI,aAATX,EACT6D,EAAYlD,GACM,UAATX,EACT8D,EAASnD,GACS,cAATX,EACT+D,EAAapD,GACK,YAATX,GACTgE,EAAWrD,IAITS,GAAW,SAACsD,GAChBA,EAAEE,iBADoB,IAEd7F,EAAO2F,EAAEC,OAAT5F,GAER,GAAW,kBAAPA,EAAwB,CAC1B,GAAmB,KAAfY,GAA+B,KAAVE,IAAmC,KAAnBC,IAAiC,KAARC,GAEhE,YADAuE,GAAkB,oCAIpB,IAAMO,EAAmB,CACvBlF,aACAE,SACAC,kBACAC,QAEFkD,EAAW6B,KAAKD,GAChB3B,EAAcD,GACdgB,GAAc,IACdC,GAAS,IACTC,GAAkB,IAClBC,GAAO,IACPE,GAAkB,SAEb,GAAW,mBAAPvF,EAAyB,CAClC,GAAiB,KAAbmB,GAA6B,KAAVE,GAA8B,KAAdC,GAAgC,KAAZC,EAEzD,YADA+D,GAAmB,qCAGrB,IAAMU,EAAoB,CACxB7E,WACAE,QACAC,YACAC,WAEF0C,EAAeD,EAAYiC,OAAOD,IAClClB,EAAY,IACZC,EAAS,IACTC,EAAa,IACbC,EAAW,IACXK,GAAmB,MAIjBY,GAAa,SAACC,EAAUxF,GAC5B,GAAiB,cAAbwF,EAA0B,CAC5B,IAAMC,EAAc,YAAOlC,GAC3BkC,EAAeC,OAAO1F,EAAG,GACzBwD,EAAciC,OACT,CACL,IAAME,EAAe,YAAOtC,GAC5BsC,EAAgBD,OAAO1F,EAAG,GAC1BsD,EAAeqC,KAIbC,GAAS,WACbd,IAAuB,IAAZD,KAsBb,OAAIA,GAEA,cAAC,EAAD,CACErF,UAAWiE,EACXhE,SAAUkE,EACVjE,MAAOmE,EACPlE,YAAaoE,EACbnE,IAAKqE,EACLpE,WAAY0D,EACZrD,gBAAiBqF,GACjBhF,YAAa8C,EACb5C,iBAAkB8E,GAClBhG,WAAYqG,KAKd,cAAC,EAAD,CACE/C,oBAAqBkC,GACrBjC,gBAAiBiC,GACjBhC,sBAAuBgC,GACvB9B,uBAAwB8B,GACxB/B,kBAAmBtB,GACnBwB,mBAAoBxB,GACpBkB,cAAegD,GACf1E,eAAgBuC,EAChBrC,cAAeuC,EACftC,WAAYwC,EACZvC,iBAAkByC,EAClBvC,SAAUyC,EACV/B,eAAgBA,GAChBD,QAlDU,SAAC+C,GAEJ,mBADIA,EAAEC,OAAT5F,IAGNuF,GAAkB,IAClBL,GAAc,IACdC,GAAS,IACTC,GAAkB,IAClBC,GAAO,KAGPP,EAAY,IACZC,EAAS,IACTC,EAAa,IACbC,EAAW,IACXK,GAAmB,KAoCjBjC,gBAAiBA,OCtKzBmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dcd105d7.chunk.js","sourcesContent":["import React from \"react\";\nimport uniqid from \"uniqid\";\n\nconst ResumePreview = (props) => {\n  return (\n    <div className=\"MainBody\">\n      <div className=\"AppHeader\">\n        <h1 className=\"AppHeader\"> Resume Preview</h1>\n        <button\n          id=\"PreviewButton\"\n          className=\"PreviewButton\"\n          onClick={props.editResume}\n        >\n          Edit\n        </button>\n      </div>\n      <div className=\"SubBody\">\n        <div className=\"MainContainer\">\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName\">{props.FirstName}&nbsp;</h2>\n            <h2 className=\"FirstLastName\">{props.LastName}</h2>\n          </div>\n          <div className=\"ContentContainer\">\n            <h3 className=\"FirstLastName\">{props.Email}&nbsp;</h3>\n            <h3> | </h3>\n            <h3 className=\"FirstLastName\">&nbsp; {props.PhoneNumber} </h3>\n          </div>\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName\">Bio</h2>\n          </div>\n          <div className=\"ContentContainer\">\n            <span className=\"BioText\">{props.Bio}</span>\n          </div>\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName\">Education</h2>\n          </div>\n          <>\n            {props.Educations.map((item, i) => {\n              return (\n                <div className=\"EducationContainer\" key={item.name+item.gpa}>\n                  <div className=\"DeleteRow\">\n                    <span className=\"EducationDetail\">{item.schoolName}</span>\n                    <i\n                      className=\"fas fa-trash BlueTrashCan\"\n                      onClick={() => props.deleteEducation(\"Education\", i)}\n                    ></i>\n                  </div>\n                  <span className=\"EducationDetail\">{item.major}</span>\n                  <span className=\"EducationDetail\">{item.graduationDate}</span>\n                  <span className=\"EducationDetail\">GPA: {item.gpa}</span>\n                </div>\n              );\n            })}\n          </>\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName Experience\">Experience</h2>\n          </div>\n          <>\n            {props.Experiences.map((item, i) => {\n              return (\n                <div className=\"EducationContainer\" key={uniqid()}>\n                  <div className=\"DeleteRow\">\n                    <span className=\"EducationDetail\">{item.employer}</span>\n                    <i\n                      id=\"DeleteEducation\"\n                      className=\"fas fa-trash BlueTrashCan\"\n                      onClick={() => props.deleteExperience(\"Experience\", i)}\n                    ></i>\n                  </div>\n                  <span className=\"EducationDetail\">{item.title}</span>\n                  <span className=\"EducationDetail\">\n                    Start Date: {item.startDate}\n                  </span>\n                  <span className=\"EducationDetail\">\n                    End Date: {item.endDate}\n                  </span>\n                </div>\n              );\n            })}\n          </>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResumePreview;\n","import React from \"react\";\n// import \"./styles/EntryPage.css\";\n\nconst Profile = (props) => {\n  return (\n    <form id=\"Profile\">\n      <div className=\"FormHeader\">\n        <p>Profile</p>\n      </div>\n      <div className=\"FormSection\">\n        <input\n          name=\"FirstName\"\n          placeholder=\"First Name\"\n          onChange={props.onChange}\n          value={props.savedFirstName}\n          className=\"Profile\"\n          type=\"text\"\n        />\n        <input\n          name=\"LastName\"\n          placeholder=\"Last Name\"\n          value={props.savedLastName}\n          onChange={props.onChange} \n          className=\"Profile\"\n          type=\"text\"\n        />\n        <input\n          name=\"Email\"\n          placeholder=\"Email\"\n          onChange={props.onChange}\n          value={props.savedEmail}\n          className=\"Profile\"\n          type=\"text\"\n        />\n        <input\n          name=\"PhoneNumber\"\n          placeholder=\"Phone Number\"\n          onChange={props.onChange}\n          value={props.savedPhoneNumber}\n          className=\"Profile\"\n          type=\"text\"\n        />\n        {props.profileError}\n      </div>\n    </form>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n// import \"./styles/EntryPage.css\";\n\nconst Bio = (props) => {\n  return (\n    <>\n      <div className=\"FormHeader\">\n        <p>Bio</p>\n      </div>\n      <div className=\"FormSection\">\n        <textarea\n          className=\"Bio\"\n          name=\"Bio\"\n          id=\"Bio\"\n          placeholder=\"Max Word Count: 250 \"\n          onChange={props.onChange}\n          value={props.savedBio}\n          type=\"text\"\n        />\n        <p className=\"WordCountError\"></p>\n      </div>\n    </>\n  );\n};\n\nexport default Bio;\n","import React from \"react\";\n// import \"./styles/EntryPage.css\";\n\nconst Education = (props) => {\n  return (\n    <>\n      <div className=\"FormHeader\">\n        <p>Education</p>\n      </div>\n      <form\n        className=\"FormSection\"\n        id=\"EducationForm\"\n        onSubmit={props.submitEducation}\n      >\n        <input\n          name=\"SchoolName\"\n          placeholder=\"School Name\"\n          onChange={props.onChange}\n          value={props.SchoolName}\n          className=\"Education\"\n        ></input>\n        <input\n          name=\"Major\"\n          placeholder=\"Major\"\n          onChange={props.onChange}\n          value={props.Major}\n          type=\"text\"\n          className=\"Education\"\n        ></input>\n        <input\n          name=\"GraduationDate\"\n          placeholder=\"Graduation Date\"\n          onChange={props.onChange}\n          value={props.GraduationDate}\n          type=\"text\"\n          className=\"Education\"\n        ></input>\n        <input\n          name=\"GPA\"\n          placeholder=\"GPA\"\n          onChange={props.onChange}\n          value={props.GPA}\n          type=\"text\"\n          className=\"Education\"\n        ></input>\n        {props.EducationError}\n        <div className=\"ButtonContainer\">\n          <button id=\"EducationSubmit\" className=\"SectionSubmit\" type=\"submit\">\n            Submit\n          </button>\n          <button id=\"resetEducation\" className=\"ClearFormButton\" type=\"reset\" onClick={props.onClear}>\n            Clear\n          </button>\n        </div>\n        <span className=\"ErrorCode\">{props.educationError}</span>\n      </form>\n    </>\n  );\n};\n\nexport default Education;\n","import React from \"react\";\n// import \"./styles/EntryPage.css\";\n\nconst Experience = (props) => {\n  return (\n    <>\n      <div className=\"FormHeader\">\n        <p>Experience</p>\n      </div>\n      <form\n        className=\"FormSection\"\n        id=\"ExperienceForm\"\n        onSubmit={props.submitExperience}\n      >\n        <input\n          name=\"Employer\"\n          placeholder=\"Employer\"\n          onChange={props.onChange}\n          value={props.Employer}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <input\n          name=\"Title\"\n          placeholder=\"Title\"\n          onChange={props.onChange}\n          value={props.Title}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <input\n          name=\"StartDate\"\n          placeholder=\"Start Date\"\n          onChange={props.onChange}\n          value={props.StartDate}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <input\n          name=\"EndDate\"\n          placeholder=\"End Date (if still employed, enter Current)\"\n          onChange={props.onChange}\n          value={props.EndDate}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <div className=\"ButtonContainer\">\n          <button id=\"ExperienceSubmit\" className=\"SectionSubmit\" type=\"submit\">\n            Submit\n          </button>\n          <button id=\"resetExperience\" className=\"ClearFormButton\" type=\"reset\" onClick={props.onClear}>\n            Clear\n          </button>\n        </div>\n        <span className=\"ErrorCode\">{props.experienceError}</span>\n      </form>\n    </>\n  );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport Bio from \"./Bio\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\n\nconst FormEntry = (props) => {\n  return (\n    <div className=\"MainBody\">\n      <div className=\"AppHeader\">\n        <h1 className=\"AppHeader\"> Resume Builder</h1>\n        <button\n          id=\"PreviewButton\"\n          className=\"PreviewButton\"\n          onClick={props.previewResume}\n        >\n          Preview\n        </button>\n      </div>\n      <div className=\"SubBody\">\n        <Profile\n          onChange={props.handleProfileChange}\n          savedFirstName={props.savedFirstName}\n          savedLastName={props.savedLastName}\n          savedEmail={props.savedEmail}\n          savedPhoneNumber={props.savedPhoneNumber}\n          profileError={props.profileError}\n        />\n        <Bio onChange={props.handleBioChange} savedBio={props.savedBio} />\n        <Education\n          onChange={props.handleEducationChange}\n          submitEducation={props.onSubmitEducation}\n          educationError={props.educationError}\n          onClear = {props.onClear}\n        />\n        <Experience\n          onChange={props.handleExperienceChange}\n          submitExperience={props.onSubmitExperience}\n          experienceError={props.experienceError}\n          onClear = {props.onClear}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormEntry;\n","import React from \"react\";\nimport ResumePreview from \"./components/ResumePreview\";\nimport FormEntry from \"./components/FormEntry\";\nimport { useState } from \"react\";\nimport _ from 'lodash'\n\nconst App = (props) => {\n  const [experiences, setExperiences] = useState([]);\n  const [educations, setEducations] = useState([]);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [schoolName, setSchoolName] = useState(\"\");\n  const [major, setMajor] = useState(\"\");\n  const [graduationDate, setGraduationDate] = useState(\"\");\n  const [gpa, setGpa] = useState(\"\");\n  const [experienceError, setExperienceError] = useState(\"\")\n  const [educationError, setEducationError ] = useState(\"\")\n  const [preview, setPreview] = useState(false);\n  \n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"FirstName\") {\n      setFirstName(value);\n    } else if (name === \"LastName\") {\n      setLastName(value);\n    } else if (name === \"Email\") {\n      setEmail(value);\n    } else if (name === \"PhoneNumber\") {\n      setPhoneNumber(value);\n    } else if (name === \"Bio\") {\n      setBio(value);\n    } else if (name === \"SchoolName\") {\n      setSchoolName(value);\n    } else if (name === \"Major\") {\n      setMajor(value);\n    } else if (name === \"GraduationDate\") {\n      setGraduationDate(value);\n    } else if (name === \"GPA\") {\n      setGpa(value);\n    } else if (name === \"SchoolName\") {\n      setSchoolName(value);\n    } else if (name === \"Employer\") {\n      setEmployer(value);\n    } else if (name === \"Title\") {\n      setTitle(value);\n    } else if (name === \"StartDate\") {\n      setStartDate(value);\n    } else if (name === \"EndDate\") {\n      setEndDate(value);\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { id } = e.target;\n\n    if (id === \"EducationForm\") {\n      if (schoolName === '' || major === '' || graduationDate === '' || gpa === '') {\n        setEducationError('Education Fields Cannot Be Blank')\n        return \n      }\n      \n      const bundledEducation = {\n        schoolName,\n        major,\n        graduationDate,\n        gpa\n      };\n      educations.push(bundledEducation)\n      setEducations(educations);\n      setSchoolName(\"\");\n      setMajor(\"\");\n      setGraduationDate(\"\");\n      setGpa(\"\");\n      setEducationError(\"\")\n\n    } else if (id === \"ExperienceForm\") {\n      if (employer === '' || title === '' || startDate === '' || endDate === '') {\n        setExperienceError('Expereince Fields Cannot Be Blank')\n        return \n      }\n      const bundledExperience = {\n        employer,\n        title,\n        startDate,\n        endDate\n      };\n      setExperiences(experiences.concat(bundledExperience));\n      setEmployer(\"\");\n      setTitle(\"\");\n      setStartDate(\"\");\n      setEndDate(\"\");\n      setExperienceError(\"\")\n    }\n  };\n\n  const deleteItem = (itemType, i) => {\n    if (itemType === \"Education\") {\n      const tempEducations = [...educations];\n      tempEducations.splice(i, 1);\n      setEducations(tempEducations);\n    } else {\n      const tempExperiences = [...experiences];\n      tempExperiences.splice(i, 1);\n      setExperiences(tempExperiences);\n    }\n  };\n\n  const toggle = () => {\n    setPreview(preview === false ? true : false);\n  };\n\n  const onClear = (e) => {\n    const { id } = e.target\n    if (id === \"resetEducation\" ) {\n\n      setEducationError(\"\")\n      setSchoolName(\"\");\n      setMajor(\"\");\n      setGraduationDate(\"\");\n      setGpa(\"\");\n    }\n    else \n      setEmployer(\"\");\n      setTitle(\"\");\n      setStartDate(\"\");\n      setEndDate(\"\");\n      setExperienceError(\"\")\n     \n  }\n\n  if (preview) {\n    return (\n      <ResumePreview\n        FirstName={firstName}\n        LastName={lastName}\n        Email={email}\n        PhoneNumber={phoneNumber}\n        Bio={bio}\n        Educations={educations}\n        deleteEducation={deleteItem}\n        Experiences={experiences}\n        deleteExperience={deleteItem}\n        editResume={toggle}\n      />\n    );\n  } else {\n    return (\n      <FormEntry\n        handleProfileChange={handleChange}\n        handleBioChange={handleChange}\n        handleEducationChange={handleChange}\n        handleExperienceChange={handleChange}\n        onSubmitEducation={onSubmit}\n        onSubmitExperience={onSubmit}\n        previewResume={toggle}\n        savedFirstName={firstName}\n        savedLastName={lastName}\n        savedEmail={email}\n        savedPhoneNumber={phoneNumber}\n        savedBio={bio}\n        educationError={educationError}\n        onClear = {onClear}\n        experienceError={experienceError}\n      />\n    );\n  }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}