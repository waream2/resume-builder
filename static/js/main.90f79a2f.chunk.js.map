{"version":3,"sources":["components/ResumePreview.js","components/Profile.js","components/Bio.js","components/Education.js","components/Experience.js","components/FormEntry.js","App.js","index.js"],"names":["ResumePreview","props","className","id","onClick","editResume","FirstName","LastName","Email","PhoneNumber","Bio","Educations","map","item","i","schoolName","deleteEducation","major","graduationDate","gpa","name","Experiences","employer","deleteExperience","title","startDate","endDate","uniqid","Profile","placeholder","onChange","value","savedFirstName","type","savedLastName","savedEmail","savedPhoneNumber","profileError","savedBio","Education","useState","educationError","setEducationError","onSubmit","e","preventDefault","length","trim","submitEducation","onClear","Experience","experienceError","setExperienceError","submitExperience","autoComplete","FormEntry","previewResume","handleProfileChange","handleBioChange","handleEducationChange","onSubmitEducation","handleExperienceChange","onSubmitExperience","App","experiences","setExperiences","educations","setEducations","firstName","setFirstName","lastName","setLastName","email","setEmail","phoneNumber","setPhoneNumber","bio","setBio","setEmployer","setTitle","setStartDate","setEndDate","setSchoolName","setMajor","setGraduationDate","setGpa","preview","setPreview","handleChange","target","bundledEducation","push","bundledExperience","concat","deleteItem","itemType","tempEducations","splice","tempExperiences","toggle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90f79a2f.chunk.js","sourcesContent":["import React from \"react\";\nimport uniqid from \"uniqid\";\n\nconst ResumePreview = (props) => {\n  return (\n    <div className=\"MainBody\">\n      <div className=\"AppHeader\">\n        <h1 className=\"AppHeader\"> Resume Preview</h1>\n        <button\n          id=\"PreviewButton\"\n          className=\"PreviewButton\"\n          onClick={props.editResume}\n        >\n          Edit\n        </button>\n      </div>\n      <div className=\"SubBody\">\n        <div className=\"MainContainer\">\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName\">{props.FirstName}&nbsp;</h2>\n            <h2 className=\"FirstLastName\">{props.LastName}</h2>\n          </div>\n          <div className=\"ContentContainer\">\n            <h3 className=\"FirstLastName\">{props.Email}&nbsp;</h3>\n            <h3> | </h3>\n            <h3 className=\"FirstLastName\">&nbsp; {props.PhoneNumber} </h3>\n          </div>\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName\">Bio</h2>\n          </div>\n          <div className=\"ContentContainer\">\n            <span className=\"BioText\">{props.Bio}</span>\n          </div>\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName\">Education</h2>\n          </div>\n          <>\n            {props.Educations.map((item, i) => {\n              return (\n                <div className=\"EducationContainer\" key={item.name + item.gpa}>\n                  <div className=\"DeleteRow\">\n                    <span className=\"EducationDetail\">{item.schoolName}</span>\n                    <i\n                      className=\"fas fa-trash BlueTrashCan\"\n                      onClick={() => props.deleteEducation(\"Education\", i)}\n                    ></i>\n                  </div>\n                  <span className=\"EducationDetail\">{item.major}</span>\n                  <span className=\"EducationDetail\">{item.graduationDate}</span>\n                  <span className=\"EducationDetail\">GPA: {item.gpa}</span>\n                </div>\n              );\n            })}\n          </>\n          <div className=\"ContentContainer\">\n            <h2 className=\"FirstLastName Experience\">Experience</h2>\n          </div>\n          <>\n            {props.Experiences.map((item, i) => {\n              return (\n                <div className=\"EducationContainer\" key={uniqid()}>\n                  <div className=\"DeleteRow\">\n                    <span className=\"EducationDetail\">{item.employer}</span>\n                    <i\n                      id=\"DeleteEducation\"\n                      className=\"fas fa-trash BlueTrashCan\"\n                      onClick={() => props.deleteExperience(\"Experience\", i)}\n                    ></i>\n                  </div>\n                  <span className=\"EducationDetail\">{item.title}</span>\n                  <span className=\"EducationDetail\">\n                    Start Date: {item.startDate}\n                  </span>\n                  <span className=\"EducationDetail\">\n                    End Date: {item.endDate}\n                  </span>\n                </div>\n              );\n            })}\n          </>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResumePreview;\n","import React from \"react\";\n// import \"./styles/EntryPage.css\";\n\nconst Profile = (props) => {\n  return (\n    <form id=\"Profile\">\n      <div className=\"FormHeader\">\n        <p>Profile</p>\n      </div>\n      <div className=\"FormSection\">\n        <input\n          name=\"FirstName\"\n          placeholder=\"First Name\"\n          onChange={props.onChange}\n          value={props.savedFirstName}\n          className=\"Profile\"\n          type=\"text\"\n        />\n        <input\n          name=\"LastName\"\n          placeholder=\"Last Name\"\n          value={props.savedLastName}\n          onChange={props.onChange}\n          className=\"Profile\"\n          type=\"text\"\n        />\n        <input\n          name=\"Email\"\n          placeholder=\"Email\"\n          onChange={props.onChange}\n          value={props.savedEmail}\n          className=\"Profile\"\n          type=\"text\"\n        />\n        <input\n          name=\"PhoneNumber\"\n          placeholder=\"Phone Number\"\n          onChange={props.onChange}\n          value={props.savedPhoneNumber}\n          className=\"Profile\"\n          type=\"text\"\n        />\n        {props.profileError}\n      </div>\n    </form>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\n\nconst Bio = (props) => {\n  return (\n    <>\n      <div className=\"FormHeader\">\n        <p>Bio</p>\n      </div>\n      <div className=\"FormSection\">\n        <textarea\n          className=\"Bio\"\n          name=\"Bio\"\n          id=\"Bio\"\n          placeholder=\"Max Word Count: 250 \"\n          onChange={props.onChange}\n          value={props.savedBio}\n          type=\"text\"\n        />\n        <p className=\"WordCountError\"></p>\n      </div>\n    </>\n  );\n};\n\nexport default Bio;\n","import React from \"react\";\nimport { useState } from \"react\";\n// import \"./styles/EntryPage.css\";\n\nconst Education = (props) => {\n  const [educationError, setEducationError] = useState(\"\");\n\n  const validateEducation = (e) => {\n    e.preventDefault();\n\n    if (\n      props.schoolName === \"\" &&\n      props.major === \"\" &&\n      props.graduationDate === \"\" &&\n      props.gpa === \"\"\n    ) {\n      setEducationError(\"All Fields Must Have Values\");\n    } else if (\n      props.schoolName.length === \"\" ||\n      props.schoolName.trim().length === 0\n    ) {\n      setEducationError(\"School Name Can't Be Blank\");\n    } else if (props.major === \"\" || props.major.trim().length === 0) {\n      setEducationError(\"Major Can't Be Blank\");\n    } else if (\n      props.graduationDate === \"\" ||\n      props.graduationDate.trim().length === 0\n    ) {\n      setEducationError(\"Graduation Date Can't Be Blank\");\n    } else if (props.gpa === \"\" || props.gpa.trim().length === 0) {\n      setEducationError(\"GPA Can't Be Blank\");\n    } else {\n      props.submitEducation(e);\n      setEducationError(\"\");\n    }\n  };\n\n  const clearError = () => {\n    setEducationError(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"FormHeader\">\n        <p>Education</p>\n      </div>\n      <form\n        className=\"FormSection\"\n        id=\"EducationForm\"\n        onSubmit={validateEducation}\n      >\n        <input\n          name=\"schoolName\"\n          placeholder=\"School Name\"\n          onChange={props.onChange}\n          value={props.schoolName}\n          className=\"Education\"\n        ></input>\n        <input\n          name=\"major\"\n          placeholder=\"Major\"\n          onChange={props.onChange}\n          value={props.major}\n          type=\"text\"\n          className=\"Education\"\n        ></input>\n        <input\n          name=\"graduationDate\"\n          placeholder=\"Graduation Date\"\n          onChange={props.onChange}\n          value={props.graduationDate}\n          type=\"text\"\n          className=\"Education\"\n        ></input>\n        <input\n          name=\"gpa\"\n          placeholder=\"GPA\"\n          onChange={props.onChange}\n          value={props.gpa}\n          type=\"text\"\n          className=\"Education\"\n        ></input>\n\n        <div className=\"ButtonContainer\">\n          <button id=\"EducationSubmit\" className=\"SectionSubmit\" type=\"submit\">\n            Submit\n          </button>\n          <button\n            id=\"resetEducation\"\n            className=\"ClearFormButton\"\n            type=\"reset\"\n            onClick={(props.onClear, clearError)}\n          >\n            Clear\n          </button>\n        </div>\n        <span className=\"ErrorCode\">{educationError}</span>\n      </form>\n    </>\n  );\n};\n\nexport default Education;\n","import React from \"react\";\nimport { useState } from \"react\";\n// import \"./styles/EntryPage.css\";\n\nconst Experience = (props) => {\n  const [experienceError, setExperienceError] = useState(\"\");\n\n  const validateExperience = (e) => {\n    e.preventDefault();\n\n    if (\n      props.employer === \"\" &&\n      props.title === \"\" &&\n      props.startDate === \"\" &&\n      props.endDate === \"\"\n    ) {\n      setExperienceError(\"All Fields Must Have Values\");\n    } else if (\n      props.employer.length === \"\" ||\n      props.employer.trim().length === 0\n    ) {\n      setExperienceError(\"Employer Can't Be Blank\");\n    } else if (props.title === \"\" || props.title.trim().length === 0) {\n      setExperienceError(\"Title Can't Be Blank\");\n    } else if (props.startDate === \"\" || props.startDate.trim().length === 0) {\n      setExperienceError(\"Start Date Can't Be Blank\");\n    } else if (props.endDate === \"\" || props.endDate.trim().length === 0) {\n      setExperienceError(\"End Date Can't Be Blank\");\n    } else {\n      props.submitExperience(e);\n      setExperienceError(\"\");\n    }\n  };\n\n  const clearError = () => {\n    setExperienceError(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"FormHeader\">\n        <p>Experience</p>\n      </div>\n      <form\n        className=\"FormSection\"\n        id=\"ExperienceForm\"\n        onSubmit={validateExperience}\n      >\n        <input\n          name=\"employer\"\n          placeholder=\"Employer\"\n          onChange={props.onChange}\n          value={props.employer}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <input\n          name=\"title\"\n          placeholder=\"Title\"\n          onChange={props.onChange}\n          value={props.title}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <input\n          name=\"startDate\"\n          placeholder=\"Start Date\"\n          onChange={props.onChange}\n          value={props.startDate}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <input\n          name=\"endDate\"\n          placeholder=\"End Date (if still employed, enter Current)\"\n          onChange={props.onChange}\n          value={props.endDate}\n          autoComplete=\"off\"\n          type=\"text\"\n          className=\"Experience\"\n        ></input>\n        <div className=\"ButtonContainer\">\n          <button id=\"ExperienceSubmit\" className=\"SectionSubmit\" type=\"submit\">\n            Submit\n          </button>\n          <button\n            id=\"resetExperience\"\n            className=\"ClearFormButton\"\n            type=\"reset\"\n            onClick={(props.onClear, clearError)}\n          >\n            Clear\n          </button>\n        </div>\n        <span className=\"ErrorCode\">{experienceError}</span>\n      </form>\n    </>\n  );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport Bio from \"./Bio\";\nimport Education from \"./Education\";\nimport Experience from \"./Experience\";\n\nconst FormEntry = (props) => {\n  return (\n    <div className=\"MainBody\">\n      <div className=\"AppHeader\">\n        <h1 className=\"AppHeader\"> Resume Builder</h1>\n        <button\n          id=\"PreviewButton\"\n          className=\"PreviewButton\"\n          onClick={props.previewResume}\n        >\n          Preview\n        </button>\n      </div>\n      <div className=\"SubBody\">\n        <Profile\n          onChange={props.handleProfileChange}\n          savedFirstName={props.savedFirstName}\n          savedLastName={props.savedLastName}\n          savedEmail={props.savedEmail}\n          savedPhoneNumber={props.savedPhoneNumber}\n          profileError={props.profileError}\n        />\n        <Bio onChange={props.handleBioChange} savedBio={props.savedBio} />\n        <Education\n          onChange={props.handleEducationChange}\n          submitEducation={props.onSubmitEducation}\n          educationError={props.educationError}\n          onClear={props.onClear}\n          schoolName={props.schoolName}\n          major={props.major}\n          graduationDate={props.graduationDate}\n          gpa={props.gpa}\n        />\n        <Experience\n          onChange={props.handleExperienceChange}\n          submitExperience={props.onSubmitExperience}\n          experienceError={props.experienceError}\n          onClear={props.onClear}\n          employer={props.employer}\n          title={props.title}\n          startDate={props.startDate}\n          endDate={props.endDate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormEntry;\n","import React from \"react\";\nimport ResumePreview from \"./components/ResumePreview\";\nimport FormEntry from \"./components/FormEntry\";\nimport { useState } from \"react\";\n\nconst App = (props) => {\n  const [experiences, setExperiences] = useState([]);\n  const [educations, setEducations] = useState([]);\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [employer, setEmployer] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [schoolName, setSchoolName] = useState(\"\");\n  const [major, setMajor] = useState(\"\");\n  const [graduationDate, setGraduationDate] = useState(\"\");\n  const [gpa, setGpa] = useState(\"\");\n  const [preview, setPreview] = useState(false);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === \"FirstName\") {\n      setFirstName(value);\n    } else if (name === \"LastName\") {\n      setLastName(value);\n    } else if (name === \"Email\") {\n      setEmail(value);\n    } else if (name === \"PhoneNumber\") {\n      setPhoneNumber(value);\n    } else if (name === \"Bio\") {\n      setBio(value);\n    } else if (name === \"schoolName\") {\n      setSchoolName(value);\n    } else if (name === \"major\") {\n      setMajor(value);\n    } else if (name === \"graduationDate\") {\n      setGraduationDate(value);\n    } else if (name === \"gpa\") {\n      setGpa(value);\n    } else if (name === \"schoolName\") {\n      setSchoolName(value);\n    } else if (name === \"employer\") {\n      setEmployer(value);\n    } else if (name === \"title\") {\n      setTitle(value);\n    } else if (name === \"startDate\") {\n      setStartDate(value);\n    } else if (name === \"endDate\") {\n      setEndDate(value);\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const { id } = e.target;\n\n    if (id === \"EducationForm\") {\n      const bundledEducation = {\n        schoolName,\n        major,\n        graduationDate,\n        gpa,\n      };\n      educations.push(bundledEducation);\n      setEducations(educations);\n      setSchoolName(\"\");\n      setMajor(\"\");\n      setGraduationDate(\"\");\n      setGpa(\"\");\n    } else if (id === \"ExperienceForm\") {\n      const bundledExperience = {\n        employer,\n        title,\n        startDate,\n        endDate,\n      };\n      setExperiences(experiences.concat(bundledExperience));\n      setEmployer(\"\");\n      setTitle(\"\");\n      setStartDate(\"\");\n      setEndDate(\"\");\n    }\n  };\n\n  const deleteItem = (itemType, i) => {\n    if (itemType === \"Education\") {\n      const tempEducations = [...educations];\n      tempEducations.splice(i, 1);\n      setEducations(tempEducations);\n    } else {\n      const tempExperiences = [...experiences];\n      tempExperiences.splice(i, 1);\n      setExperiences(tempExperiences);\n    }\n  };\n\n  const toggle = () => {\n    setPreview(preview === false ? true : false);\n  };\n\n  const onClear = (e) => {\n    const { id } = e.target;\n    if (id === \"resetEducation\") {\n      setSchoolName(\"\");\n      setMajor(\"\");\n      setGraduationDate(\"\");\n      setGpa(\"\");\n    } else setEmployer(\"\");\n    setTitle(\"\");\n    setStartDate(\"\");\n    setEndDate(\"\");\n  };\n\n  if (preview) {\n    return (\n      <ResumePreview\n        FirstName={firstName}\n        LastName={lastName}\n        Email={email}\n        PhoneNumber={phoneNumber}\n        Bio={bio}\n        Educations={educations}\n        deleteEducation={deleteItem}\n        Experiences={experiences}\n        deleteExperience={deleteItem}\n        editResume={toggle}\n      />\n    );\n  } else {\n    return (\n      <FormEntry\n        handleProfileChange={handleChange}\n        handleBioChange={handleChange}\n        handleEducationChange={handleChange}\n        handleExperienceChange={handleChange}\n        onSubmitEducation={onSubmit}\n        onSubmitExperience={onSubmit}\n        previewResume={toggle}\n        savedFirstName={firstName}\n        savedLastName={lastName}\n        savedEmail={email}\n        savedPhoneNumber={phoneNumber}\n        savedBio={bio}\n        onClear={onClear}\n        schoolName={schoolName}\n        major={major}\n        graduationDate={graduationDate}\n        gpa={gpa}\n        employer={employer}\n        title={title}\n        startDate={startDate}\n        endDate={endDate}\n      />\n    );\n  }\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}